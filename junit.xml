<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite errors="1" failures="4" hostname="felurian" name="pytest" skipped="0" tests="5" time="2.720" timestamp="2022-10-07T17:09:30.053101"><testcase classname="tests.e2e.test_definitions" name="test_create_credential_definition" time="0.962"><failure message="aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)">governance_acapy_client = &lt;aries_cloudcontroller.acapy_client.AcaPyClient object at 0x1065e18b0&gt;
governance_client = &lt;httpx.AsyncClient object at 0x10670ac10&gt;

    @pytest.mark.asyncio
    async def test_create_credential_definition(
        governance_acapy_client: AcaPyClient, governance_client: AsyncClient
    ):
        # given
        schema_send = CreateSchema(
            name=get_random_string(15), version=&quot;0.1&quot;, attribute_names=[&quot;average&quot;]
        )
    
        if not await has_public_did(governance_acapy_client):
            await create_public_did(governance_acapy_client, set_public=True)
    
        schema_result = (
&gt;           await definitions.create_schema(schema_send, governance_acapy_client)
        ).dict()

app/tests/e2e/test_definitions.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
app/generic/definitions.py:356: in create_schema
    result = await aries_controller.schema.publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aries_cloudcontroller/api/schema.py:58: in publish_schema
    return await self.__publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:38: in execute
    response = yield from executable.execute()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:108: in on_failure
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:128: in fail
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/interfaces.py:303: in fail
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/aiohttp_.py:135: in send
    response = yield from session.request(method, url, **extras)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client.py:643: in _request
    resp.raise_for_status()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ClientResponse(http://localhost:3021/schemas?create_transaction_for_endorser=false) [400 Ledger request error. Reques...arset=utf-8&apos;, &apos;Content-Length&apos;: &apos;141&apos;, &apos;Date&apos;: &apos;Fri, 07 Oct 2022 15:09:31 GMT&apos;, &apos;Server&apos;: &apos;Python/3.6 aiohttp/3.8.3&apos;)&gt;


    def raise_for_status(self) -&gt; None:
        if not self.ok:
            # reason should always be not None for a started response
            assert self.reason is not None
            self.release()
&gt;           raise ClientResponseError(
                self.request_info,
                self.history,
                status=self.status,
                message=self.reason,
                headers=self.headers,
            )
E           aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client_reqrep.py:1005: ClientResponseError</failure></testcase><testcase classname="tests.e2e.test_definitions" name="test_create_schema" time="0.294"><failure message="aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)">governance_acapy_client = &lt;aries_cloudcontroller.acapy_client.AcaPyClient object at 0x1065e18b0&gt;

    @pytest.mark.asyncio
    async def test_create_schema(governance_acapy_client: AcaPyClient):
        # given
        schema_send = CreateSchema(
            name=get_random_string(15), version=&quot;0.1&quot;, attribute_names=[&quot;average&quot;]
        )
    
        try:
            did = await get_public_did(governance_acapy_client)
        except:
            did = await create_public_did(governance_acapy_client, set_public=True)
    
        result = (
&gt;           await definitions.create_schema(schema_send, governance_acapy_client)
        ).dict()

app/tests/e2e/test_definitions.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
app/generic/definitions.py:356: in create_schema
    result = await aries_controller.schema.publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aries_cloudcontroller/api/schema.py:58: in publish_schema
    return await self.__publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:38: in execute
    response = yield from executable.execute()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:108: in on_failure
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:128: in fail
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/interfaces.py:303: in fail
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/aiohttp_.py:135: in send
    response = yield from session.request(method, url, **extras)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client.py:643: in _request
    resp.raise_for_status()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ClientResponse(http://localhost:3021/schemas?create_transaction_for_endorser=false) [400 Ledger request error. Reques...arset=utf-8&apos;, &apos;Content-Length&apos;: &apos;141&apos;, &apos;Date&apos;: &apos;Fri, 07 Oct 2022 15:09:31 GMT&apos;, &apos;Server&apos;: &apos;Python/3.6 aiohttp/3.8.3&apos;)&gt;


    def raise_for_status(self) -&gt; None:
        if not self.ok:
            # reason should always be not None for a started response
            assert self.reason is not None
            self.release()
&gt;           raise ClientResponseError(
                self.request_info,
                self.history,
                status=self.status,
                message=self.reason,
                headers=self.headers,
            )
E           aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client_reqrep.py:1005: ClientResponseError</failure></testcase><testcase classname="tests.e2e.test_definitions" name="test_get_schema" time="0.353"><failure message="aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)">governance_acapy_client = &lt;aries_cloudcontroller.acapy_client.AcaPyClient object at 0x1065e18b0&gt;

    @pytest.mark.asyncio
    async def test_get_schema(governance_acapy_client: AcaPyClient):
        # given
        schema_send = CreateSchema(
            name=get_random_string(15), version=&quot;0.1&quot;, attribute_names=[&quot;average&quot;]
        )
    
        try:
            did = await get_public_did(governance_acapy_client)
        except:
            did = await create_public_did(governance_acapy_client, set_public=True)
    
        create_result = (
&gt;           await definitions.create_schema(schema_send, governance_acapy_client)
        ).dict()

app/tests/e2e/test_definitions.py:104: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
app/generic/definitions.py:356: in create_schema
    result = await aries_controller.schema.publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aries_cloudcontroller/api/schema.py:58: in publish_schema
    return await self.__publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:38: in execute
    response = yield from executable.execute()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:108: in on_failure
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:128: in fail
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/interfaces.py:303: in fail
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/aiohttp_.py:135: in send
    response = yield from session.request(method, url, **extras)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client.py:643: in _request
    resp.raise_for_status()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ClientResponse(http://localhost:3021/schemas?create_transaction_for_endorser=false) [400 Ledger request error. Reques...arset=utf-8&apos;, &apos;Content-Length&apos;: &apos;141&apos;, &apos;Date&apos;: &apos;Fri, 07 Oct 2022 15:09:31 GMT&apos;, &apos;Server&apos;: &apos;Python/3.6 aiohttp/3.8.3&apos;)&gt;


    def raise_for_status(self) -&gt; None:
        if not self.ok:
            # reason should always be not None for a started response
            assert self.reason is not None
            self.release()
&gt;           raise ClientResponseError(
                self.request_info,
                self.history,
                status=self.status,
                message=self.reason,
                headers=self.headers,
            )
E           aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client_reqrep.py:1005: ClientResponseError</failure></testcase><testcase classname="tests.e2e.test_definitions" name="test_get_credential_definition" time="0.257"><failure message="aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)">governance_acapy_client = &lt;aries_cloudcontroller.acapy_client.AcaPyClient object at 0x1065e18b0&gt;
governance_client = &lt;httpx.AsyncClient object at 0x10670ac10&gt;

    @pytest.mark.asyncio
    async def test_get_credential_definition(
        governance_acapy_client: AcaPyClient, governance_client: AsyncClient
    ):
        # given
        schema_send = CreateSchema(
            name=get_random_string(15), version=&quot;0.1&quot;, attribute_names=[&quot;average&quot;]
        )
    
        if not await has_public_did(governance_acapy_client):
            await create_public_did(governance_acapy_client, set_public=True)
        schema_result = (
&gt;           await definitions.create_schema(schema_send, governance_acapy_client)
        ).dict()

app/tests/e2e/test_definitions.py:127: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
app/generic/definitions.py:356: in create_schema
    result = await aries_controller.schema.publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aries_cloudcontroller/api/schema.py:58: in publish_schema
    return await self.__publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:38: in execute
    response = yield from executable.execute()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:108: in on_failure
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:128: in fail
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/interfaces.py:303: in fail
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/aiohttp_.py:135: in send
    response = yield from session.request(method, url, **extras)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client.py:643: in _request
    resp.raise_for_status()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ClientResponse(http://localhost:3021/schemas?create_transaction_for_endorser=false) [400 Ledger request error. Reques...arset=utf-8&apos;, &apos;Content-Length&apos;: &apos;141&apos;, &apos;Date&apos;: &apos;Fri, 07 Oct 2022 15:09:32 GMT&apos;, &apos;Server&apos;: &apos;Python/3.6 aiohttp/3.8.3&apos;)&gt;


    def raise_for_status(self) -&gt; None:
        if not self.ok:
            # reason should always be not None for a started response
            assert self.reason is not None
            self.release()
&gt;           raise ClientResponseError(
                self.request_info,
                self.history,
                status=self.status,
                message=self.reason,
                headers=self.headers,
            )
E           aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client_reqrep.py:1005: ClientResponseError</failure></testcase><testcase classname="tests.e2e.test_definitions" name="test_create_credential_definition_issuer_tenant" time="0.498"><error message="test setup failure">args = ()
kwargs = {&apos;governance_acapy_client&apos;: &lt;aries_cloudcontroller.acapy_client.AcaPyClient object at 0x1065e18b0&gt;}
loop = &lt;_UnixSelectorEventLoop running=False closed=False debug=False&gt;
setup = &lt;function pytest_fixture_setup.&lt;locals&gt;.wrapper.&lt;locals&gt;.setup at 0x10670c8b0&gt;

    def wrapper(*args, **kwargs):
        loop = fixture_stripper.get_and_strip_from(FixtureStripper.EVENT_LOOP, kwargs)
    
        async def setup():
            res = await coro(*args, **kwargs)
            return res
    
&gt;       return loop.run_until_complete(setup())

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/pytest_asyncio/plugin.py:143: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
../../.pyenv/versions/3.8.10/lib/python3.8/asyncio/base_events.py:616: in run_until_complete
    return future.result()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/pytest_asyncio/plugin.py:140: in setup
    res = await coro(*args, **kwargs)
app/tests/e2e/test_fixtures.py:45: in schema_definition
    schema_definition_result = await create_schema(definition, governance_acapy_client)
app/generic/definitions.py:356: in create_schema
    result = await aries_controller.schema.publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aries_cloudcontroller/api/schema.py:58: in publish_schema
    return await self.__publish_schema(
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:38: in execute
    response = yield from executable.execute()
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:20: in invoke
    response = yield from callback.on_failure(type(error), error, tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:108: in on_failure
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/execution.py:128: in fail
    return self._io.fail(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/interfaces.py:303: in fail
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/hooks.py:109: in handle_exception
    compat.reraise(exc_type, exc_val, exc_tb)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/six.py:719: in reraise
    raise value
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/io/asyncio_strategy.py:17: in invoke
    response = yield from func(*args, **kwargs)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/uplink/clients/aiohttp_.py:135: in send
    response = yield from session.request(method, url, **extras)
../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client.py:643: in _request
    resp.raise_for_status()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;ClientResponse(http://localhost:3021/schemas?create_transaction_for_endorser=false) [400 Ledger request error. Reques...arset=utf-8&apos;, &apos;Content-Length&apos;: &apos;141&apos;, &apos;Date&apos;: &apos;Fri, 07 Oct 2022 15:09:32 GMT&apos;, &apos;Server&apos;: &apos;Python/3.6 aiohttp/3.8.3&apos;)&gt;


    def raise_for_status(self) -&gt; None:
        if not self.ok:
            # reason should always be not None for a started response
            assert self.reason is not None
            self.release()
&gt;           raise ClientResponseError(
                self.request_info,
                self.history,
                status=self.status,
                message=self.reason,
                headers=self.headers,
            )
E           aiohttp.client_exceptions.ClientResponseError: 400, message=&apos;Ledger request error. Request failed: client request invalid: could not authenticate, verkey for C7U2avTW97gQy8TyMtcPjn cannot be found.&apos;, url=URL(&apos;http://localhost:3021/schemas?create_transaction_for_endorser=false&apos;)

../../.pyenv/versions/3.8.10/lib/python3.8/site-packages/aiohttp/client_reqrep.py:1005: ClientResponseError</error></testcase></testsuite></testsuites>