<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="1" skipped="0" tests="1" time="10.259" timestamp="2021-06-16T20:10:52.187236" hostname="localhost"><testcase classname="tests.bdd.steps.test_001_wallet" name="test_GetPublicDid" time="10.027"><failure message="AssertionError: assert 'did_object' in &lt;Response [500]&gt;">request = &lt;FixtureRequest for &lt;Function test_GetPublicDid&gt;&gt;

    @pytest.mark.usefixtures(*function_args)
    def scenario_wrapper(request):
&gt;       _execute_scenario(feature, scenario, request, encoding)

../.venv-fastapi/lib/python3.8/site-packages/pytest_bdd/scenario.py:177: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../.venv-fastapi/lib/python3.8/site-packages/pytest_bdd/scenario.py:143: in _execute_scenario
    _execute_step_function(request, scenario, step, step_func)
../.venv-fastapi/lib/python3.8/site-packages/pytest_bdd/scenario.py:113: in _execute_step_function
    return_value = step_func(**kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    @then("I am able to generate a public DID")
    def gen_pub_did():
        header = admin_header()
        endpoint = target_did_enpoint()
        # assert 1 == 2
        url = "http://localhost:8000/wallets/create-pub-did"
        # async with aiohttp.ClientSession() as session:
        #     async with session.get(url, header=header) as resp:
        #         result = await requests.get(FASTAPI_URL, header=admin_header)
            # assert 1 == 2
        # assert "did_objects" in result
    
    #     assert did_object in result
    #     assert issuer_ver in result
        # assert 1 == 2
    
        result = requests.get(url, headers=header)
        time.sleep(10)
&gt;       assert "did_object" in result
E       AssertionError: assert 'did_object' in &lt;Response [500]&gt;

app/tests/bdd/steps/test_001_wallet.py:58: AssertionError</failure></testcase></testsuite></testsuites>